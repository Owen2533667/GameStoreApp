@model Game

@{
    ViewData["Title"] = "Games Detials";
}


<div class="row">
    <div class="col-md-8 offset-md-2 col-sm-12">
        <div class="card mb-3">
            <div class="row g-0">
                <div class="col-md-12">
                    <div class="card-header text-white bg-danger">
                        <p class="card-text">
                            <h5 class="card-title">
                                @Model.Name
                            </h5>
                        </p>
                    </div>
                </div>
                <div class="col-md-4 col-sm-12 align-items-center d-flex flex-md-column">
                    <img src="@Model.ImageURL" alt="@Model.Name" class="img-fluid centered-image" style="border: 2px solid #555;">
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <p class="card-text">@Model.Description</p>
                        <p class="card-text">
                            <b>Publisher: </b>
                            <a href="@Url.Action("Details", "GamePublisher", new { id = Model.GamePublisherId, returnId = Model.Id })">@Model.GamePublisher!.Name</a>
                        </p>
                        <p class="card-text">
                            <b>Developer: </b>
                            <a asp-controller="GameDeveloper" asp-action="Details" asp-route-id="@Model.GameDeveloperId" asp-route-returnId="@Model.Id">@Model.GameDeveloper!.Name</a>
                        </p>
                        <p class="card-text">
                            <b>PEGI: </b>
                            @{
                                var ratingClass = "badge";

                                switch (Model.GameRating!.Name)
                                {
                                    case "3":
                                    case "7":
                                        ratingClass += " bg-success text-white";
                                        break;
                                    case "12":
                                    case "16":
                                    case "!":
                                        ratingClass += " bg-warning text-white";
                                        break;
                                    default:
                                        ratingClass += " bg-danger text-white";
                                        break;
                                }
                            }
                            <a class="@ratingClass" asp-controller="GameRating" asp-action="Details" asp-route-id="@Model.GameRatingId" asp-route-returnId="@Model.Id"><b>@Model.GameRating.Name</b></a>
                        </p>
                        <p class="card-text">
                            @*Gets the display name for the enum genre.*@
                            <b>Genre: </b>
                            @Html.DisplayTextFor(x => @Model.GameGenre)
                        </p>
                        <p class="card-text"><b>Release Date: </b> @Model.ReleaseDate.ToString("dd MMM yyyy")</p>
                        <p class="card-text">
                            <b>Status:</b>
                            @*if the current date is past the release date, then the badge will be released, if not, then the badge will become preoreder.*@
                            @if (DateTime.Now >= Model.ReleaseDate)
                            {
                                <span class="badge bg-success text-white">RELEASED</span>
                            }
                            else
                            {
                                <span class="badge bg-primary text-white">PRE-ORDER</span>
                            }
                        </p>
                        @*if the current game property of type list<Platform_Game> has the current count that is more than zero, display the platforms.*@
                        @if (Model.Platforms_Games!.Count > 0)
                        {
                            <p class="card-text">
                                <b>Platform: </b>
                                <hr />
                                <div class="row">
                                    @*for each of the platforms in the model List property called Platform_Game, display their picture and name. By clicking a platform name, it will invoke the action details in the controller class with platform id that was clicked.*@
                                    @foreach (var platform in Model.Platforms_Games)
                                    {
                                        <div class="col-6 col-md-3 text-center mb-3">
                                            <a href="@Url.Action("Details", "Platform", new { id = platform.PlatformId, returnId = Model.Id })">
                                                <img src="@platform.Platform!.ImageURL" class="boarder-info VoiceActorImages" style="max-height: 120px; width: auto;" />
                                                <br />
                                                <a asp-controller="Platform" asp-action="Details" asp-route-id="@platform.PlatformId" asp-route-returnId="@Model.Id">@platform.Platform.Name</a>
                                            </a>
                                        </div>
                                    }
                                </div>
                            </p>
                        }
                        @*if the current game property of type list<VoiceActors_Games> has the current count that is more than zero, display the voice actors.*@
                        @if (Model.VoiceActors_Games!.Count > 0)
                        {
                            <p class="card-text">
                                <b>Voice Actors: </b>
                                <hr />
                                <div class="row">
                                    @*for each of the voice actores in the model List property called VoiceActor_Games, display their picture and name. By clicking a voice actors name, it will invoke the action details in the controller class with the voice actors id that was clicked.*@
                                    @foreach (var voiceActor in Model.VoiceActors_Games)
                                    {
                                        <div class="col-6 col-md-3 text-center mb-3">
                                            <a href="@Url.Action("Details", "VoiceActor", new { id = voiceActor.VoiceActorId, returnId = Model.Id })">
                                                <img src="@voiceActor.VoiceActor!.PictureURL" class="boarder-info rounded-circle VoiceActorImages" style="max-height: 120px; width: auto;" />
                                                <br />
                                                <a asp-controller="VoiceActor" asp-action="Details" asp-route-id="@voiceActor.VoiceActorId" asp-route-returnId="@Model.Id">@voiceActor.VoiceActor.FullName</a>
                                            </a>
                                        </div>
                                    }
                                </div>
                            </p>
                        }

                    </div>
                </div>
                <div class="col-md-12">
                    <div class="card-footer">
                        @{
                            var returnController = TempData["returnController"]?.ToString();
                            var pg = TempData["pg"];
                            var returnId = Model.Id;
                        }

                        @{
                            string action;
                            object routeValues = null!;

                            switch (returnController)
                            {
                                case "Game":
                                    action = "Index";
                                    routeValues = new { pg };
                                    break;
                                case "GameDeveloper":
                                    action = "Details";
                                    routeValues = new { returnId, Id = Model.GameDeveloperId };
                                    break;
                                case "GamePublisher":
                                    action = "Details";
                                    routeValues = new { returnId, Id = Model.GamePublisherId };
                                    break;
                                default:
                                    action = "Index";
                                    break;
                            }
                        }
                        <a class="btn btn-outline-primary" asp-action="@action" asp-controller="@returnController" asp-route-id="@routeValues">
                            <i class="bi bi-caret-left-square-fill"></i> Back
                        </a>

                        @*this is the button that will call the action method AddToShoppingCart in the controller Orders with the id of the current game. The button will gave a icon of a cart with a plus and display "Add to Cart" with the current game price in a currency.*@
                        <a class="btn btn-success text-white float-sm-end" asp-controller="Orders" asp-action="AddToShoppingCart" asp-route-id="@Model.Id"><i class="bi bi-cart-plus"></i> Add to Cart (@Model.Price.ToString("c"))</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>