// <auto-generated />
using System;
using GameStoreApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameStoreApp.Migrations
{
    [DbContext(typeof(GameStoreAppDbContext))]
    [Migration("20230420115102_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameStoreApp.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameDeveloperId")
                        .HasColumnType("int");

                    b.Property<int>("GameGenre")
                        .HasColumnType("int");

                    b.Property<int>("GamePublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("imageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameDeveloperId");

                    b.HasIndex("GamePublisherId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameStoreApp.Models.GameDeveloper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GameDevelopers");
                });

            modelBuilder.Entity("GameStoreApp.Models.GamePublisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GamePublishers");
                });

            modelBuilder.Entity("GameStoreApp.Models.VoiceActor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VoiceActors");
                });

            modelBuilder.Entity("GameStoreApp.Models.VoiceActor_Game", b =>
                {
                    b.Property<int>("VoiceActorId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.HasKey("VoiceActorId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("VoiceActors_Games");
                });

            modelBuilder.Entity("GameStoreApp.Models.Game", b =>
                {
                    b.HasOne("GameStoreApp.Models.GameDeveloper", "GameDeveloper")
                        .WithMany("Games")
                        .HasForeignKey("GameDeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStoreApp.Models.GamePublisher", "GamePublisher")
                        .WithMany("Games")
                        .HasForeignKey("GamePublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameDeveloper");

                    b.Navigation("GamePublisher");
                });

            modelBuilder.Entity("GameStoreApp.Models.VoiceActor_Game", b =>
                {
                    b.HasOne("GameStoreApp.Models.Game", "Game")
                        .WithMany("VoiceActors_Games")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStoreApp.Models.VoiceActor", "VoiceActor")
                        .WithMany("VoiceActors_Games")
                        .HasForeignKey("VoiceActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("VoiceActor");
                });

            modelBuilder.Entity("GameStoreApp.Models.Game", b =>
                {
                    b.Navigation("VoiceActors_Games");
                });

            modelBuilder.Entity("GameStoreApp.Models.GameDeveloper", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("GameStoreApp.Models.GamePublisher", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("GameStoreApp.Models.VoiceActor", b =>
                {
                    b.Navigation("VoiceActors_Games");
                });
#pragma warning restore 612, 618
        }
    }
}
